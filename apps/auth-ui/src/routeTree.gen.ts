/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CliSigninRouteImport } from './routes/cli.signin'
import { Route as CliSigninCompleteRouteImport } from './routes/cli.signin.complete'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CliSigninRoute = CliSigninRouteImport.update({
  id: '/cli/signin',
  path: '/cli/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const CliSigninCompleteRoute = CliSigninCompleteRouteImport.update({
  id: '/complete',
  path: '/complete',
  getParentRoute: () => CliSigninRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cli/signin': typeof CliSigninRouteWithChildren
  '/cli/signin/complete': typeof CliSigninCompleteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cli/signin': typeof CliSigninRouteWithChildren
  '/cli/signin/complete': typeof CliSigninCompleteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/cli/signin': typeof CliSigninRouteWithChildren
  '/cli/signin/complete': typeof CliSigninCompleteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cli/signin' | '/cli/signin/complete'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cli/signin' | '/cli/signin/complete'
  id: '__root__' | '/' | '/cli/signin' | '/cli/signin/complete'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CliSigninRoute: typeof CliSigninRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cli/signin': {
      id: '/cli/signin'
      path: '/cli/signin'
      fullPath: '/cli/signin'
      preLoaderRoute: typeof CliSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cli/signin/complete': {
      id: '/cli/signin/complete'
      path: '/complete'
      fullPath: '/cli/signin/complete'
      preLoaderRoute: typeof CliSigninCompleteRouteImport
      parentRoute: typeof CliSigninRoute
    }
  }
}

interface CliSigninRouteChildren {
  CliSigninCompleteRoute: typeof CliSigninCompleteRoute
}

const CliSigninRouteChildren: CliSigninRouteChildren = {
  CliSigninCompleteRoute: CliSigninCompleteRoute,
}

const CliSigninRouteWithChildren = CliSigninRoute._addFileChildren(
  CliSigninRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CliSigninRoute: CliSigninRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
